{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jawn/Documents/GitHub/jawn-nft/components/scenery.js\";\nimport * as THREE from 'three';\nimport React, { Suspense, useState, useRef } from 'react';\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber';\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei';\nexport function AmLights(props) {\n  var colors = ['red', 'green', 'blue', 'yellow', 'purple', 'cyan'];\n  var intensities = [{\n    intensity: [Math.floor(Math.random())]\n  }];\n  var randomColor = colors[Math.floor(Math.random() * colors.length)];\n  var RandomColor = colors[randomColor];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#f0f0f0']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      color: colors,\n      intensity: intensities.intensity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c = AmLights;\nexport function PoLights(props) {\n  var colors = ['red', 'green', 'blue', 'yellow', 'purple', 'cyan'];\n  var intensities = [{\n    intensity: [math.floor(Math.random())]\n  }];\n  var randomColor = colors[Math.floor(Math.random() * colors.length)];\n  var RandomColor = colors[randomColor];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#f0f0f0']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      color: colors,\n      intensity: intensities.intensity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c2 = PoLights;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AmLights\");\n$RefreshReg$(_c2, \"PoLights\");","map":{"version":3,"sources":["/Users/jawn/Documents/GitHub/jawn-nft/components/scenery.js"],"names":["THREE","React","Suspense","useState","useRef","Canvas","useFrame","createPortal","useGLTF","Stage","Sky","Stars","useFBO","OrbitControls","rotation","PerspectiveCamera","CameraShake","ContactShadows","AmLights","props","colors","intensities","intensity","Math","floor","random","randomColor","length","RandomColor","PoLights","math"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,YAA3B,QAA+C,oBAA/C;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,aAA7C,EAA4DC,QAA5D,EAAsEC,iBAAtE,EAAyFC,WAAzF,EAAsGC,cAAtG,QAA4H,mBAA5H;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAE5B,MAAMC,MAAM,GAAG,CACX,KADW,EAEX,OAFW,EAGX,MAHW,EAIX,QAJW,EAKX,QALW,EAMX,MANW,CAAf;AASA,MAAMC,WAAW,GAAG,CAChB;AACIC,IAAAA,SAAS,EAAE,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD;AADf,GADgB,CAApB;AAOF,MAAMC,WAAW,GAAGN,MAAM,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAAM,CAACO,MAAlC,CAAD,CAA1B;AACA,MAAIC,WAAW,GAAGR,MAAM,CAACM,WAAD,CAAxB;AAKE,sBACI;AAAA,4BACE;AAAO,MAAA,MAAM,EAAC,YAAd;AAA2B,MAAA,IAAI,EAAE,CAAC,SAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAc,MAAA,KAAK,EAAEN,MAArB;AAA6B,MAAA,SAAS,EAAEC,WAAW,CAACC;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADJ;AAOH;KA/BeJ,Q;AAoChB,OAAO,SAASW,QAAT,CAAkBV,KAAlB,EAAyB;AAE5B,MAAMC,MAAM,GAAG,CACX,KADW,EAEX,OAFW,EAGX,MAHW,EAIX,QAJW,EAKX,QALW,EAMX,MANW,CAAf;AASA,MAAMC,WAAW,GAAG,CAChB;AACIC,IAAAA,SAAS,EAAE,CAACQ,IAAI,CAACN,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD;AADf,GADgB,CAApB;AAOF,MAAMC,WAAW,GAAGN,MAAM,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAAM,CAACO,MAAlC,CAAD,CAA1B;AACA,MAAIC,WAAW,GAAGR,MAAM,CAACM,WAAD,CAAxB;AAIE,sBACI;AAAA,4BACE;AAAO,MAAA,MAAM,EAAC,YAAd;AAA2B,MAAA,IAAI,EAAE,CAAC,SAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAY,MAAA,KAAK,EAAEN,MAAnB;AAA2B,MAAA,SAAS,EAAEC,WAAW,CAACC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADJ;AAOH;MA9BeO,Q","sourcesContent":["import * as THREE from 'three'\nimport React, {  Suspense, useState, useRef } from 'react'\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber'\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'\n\nexport function AmLights(props) {\n\n    const colors = [\n        'red',\n        'green',\n        'blue',\n        'yellow',\n        'purple',\n        'cyan'\n    ]\n\n    const intensities = [\n        {\n            intensity: [Math.floor(Math.random())],\n        }\n    ]\n\n\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\n  let RandomColor = colors[randomColor];\n\n \n\n\n    return (\n        <>\n          <color attach=\"background\" args={['#f0f0f0']} />\n          <ambientLight color={colors} intensity={intensities.intensity} />\n        </>\n      )\n\n}\n\n\n\n\nexport function PoLights(props) {\n\n    const colors = [\n        'red',\n        'green',\n        'blue',\n        'yellow',\n        'purple',\n        'cyan'\n    ]\n\n    const intensities = [\n        {\n            intensity: [math.floor(Math.random())],\n        }\n    ]\n\n\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\n  let RandomColor = colors[randomColor];\n \n\n\n    return (\n        <>\n          <color attach=\"background\" args={['#f0f0f0']} />\n          <pointLight color={colors} intensity={intensities.intensity} />\n        </>\n      )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}