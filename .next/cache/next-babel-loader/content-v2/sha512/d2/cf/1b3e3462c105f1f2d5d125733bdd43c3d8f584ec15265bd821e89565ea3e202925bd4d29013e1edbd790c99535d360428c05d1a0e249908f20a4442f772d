{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jawn/Documents/GitHub/jawn-nft/components/doge-copy.js\",\n    _this = this;\n\nimport Image from 'next/image';\nimport YouTube from 'react-youtube';\n\nvar DogeImages = function DogeImages(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doge-copy_images image-grid-\".concat(props.images.length),\n    children: props.images.map(function (item, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doge-copy_image-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: item,\n          layout: \"fill\",\n          objectFit: \"contain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }, _this)\n      }, \"\".concat(item, \"-\").concat(i), false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = DogeImages;\n\nvar VideoWrapper = function VideoWrapper(props) {\n  var opts = {\n    playerVars: {\n      autoplay: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(YouTube, {\n    className: 'video-wrapper',\n    videoId: props.video,\n    opts: opts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = VideoWrapper;\n\nvar DogeCopy = function DogeCopy(props) {\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"doge-copy_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-pill\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this), props.copy.map(function (item, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doge-copy_module \".concat(item.type),\n        children: item.type === 'copy' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: item.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 36\n        }, _this) : item.type === 'header' ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          dangerouslySetInnerHTML: {\n            __html: item.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }, _this) : item.type === 'images' ? /*#__PURE__*/_jsxDEV(DogeImages, {\n          images: item.images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 42\n        }, _this) : item.type === 'video' ? /*#__PURE__*/_jsxDEV(VideoWrapper, {\n          video: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 43\n        }, _this) : false\n      }, \"\".concat(item.type, \"-\").concat(i), false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, _this);\n};\n\n_c3 = DogeCopy;\nexport default DogeCopy;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DogeImages\");\n$RefreshReg$(_c2, \"VideoWrapper\");\n$RefreshReg$(_c3, \"DogeCopy\");","map":{"version":3,"sources":["/Users/jawn/Documents/GitHub/jawn-nft/components/doge-copy.js"],"names":["Image","YouTube","DogeImages","props","images","length","map","item","i","VideoWrapper","opts","playerVars","autoplay","video","DogeCopy","title","copy","type","__html","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,sBACtB;AAAK,IAAA,SAAS,wCAAiCA,KAAK,CAACC,MAAN,CAAaC,MAA9C,CAAd;AAAA,cACGF,KAAK,CAACC,MAAN,CAAaE,GAAb,CAAiB,UAACC,IAAD,EAAOC,CAAP;AAAA,0BAChB;AAAK,QAAA,SAAS,2BAAd;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,GAAG,EAAED,IADP;AAEE,UAAA,MAAM,EAAC,MAFT;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF,mBAAmDA,IAAnD,cAA2DC,CAA3D;AAAA;AAAA;AAAA;AAAA,eADgB;AAAA,KAAjB;AADH;AAAA;AAAA;AAAA;AAAA,WADsB;AAAA,CAAxB;;KAAMN,U;;AAaN,IAAMO,YAAY,GAAG,SAAfA,YAAe,CAAAN,KAAK,EAAI;AAC5B,MAAMO,IAAI,GAAG;AACXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AADD,GAAb;AAKA,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAE,eAApB;AAAqC,IAAA,OAAO,EAAET,KAAK,CAACU,KAApD;AAA2D,IAAA,IAAI,EAAEH;AAAjE;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CATD;;MAAMD,Y;;AAYN,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAAX,KAAK;AAAA,sBACpB;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BA,KAAK,CAACY;AAAlC;AAAA;AAAA;AAAA;AAAA,aADF,EAEGZ,KAAK,CAACa,IAAN,CAAWV,GAAX,CACC,UAACC,IAAD,EAAOC,CAAP;AAAA,0BACE;AAAK,QAAA,SAAS,6BAAsBD,IAAI,CAACU,IAA3B,CAAd;AAAA,kBAEIV,IAAI,CAACU,IAAL,KAAc,MAAd,gBAAuB;AAAK,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEX,IAAI,CAACY;AAAf;AAA9B;AAAA;AAAA;AAAA;AAAA,iBAAvB,GACEZ,IAAI,CAACU,IAAL,KAAc,QAAd,gBAAyB;AAAI,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEX,IAAI,CAACY;AAAf;AAA7B;AAAA;AAAA;AAAA;AAAA,iBAAzB,GACEZ,IAAI,CAACU,IAAL,KAAc,QAAd,gBAAyB,QAAC,UAAD;AAAY,UAAA,MAAM,EAAEV,IAAI,CAACH;AAAzB;AAAA;AAAA;AAAA;AAAA,iBAAzB,GACEG,IAAI,CAACU,IAAL,KAAc,OAAd,gBAAwB,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEV,IAAI,CAACY;AAA1B;AAAA;AAAA;AAAA;AAAA,iBAAxB,GACA;AANV,mBAAyDZ,IAAI,CAACU,IAA9D,cAAsET,CAAtE;AAAA;AAAA;AAAA;AAAA,eADF;AAAA,KADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADoB;AAAA,CAAtB;;MAAMM,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import Image from 'next/image'\nimport YouTube from 'react-youtube';\n\nconst DogeImages = props =>\n  <div className={`doge-copy_images image-grid-${props.images.length}`}>\n    {props.images.map((item, i) => (\n      <div className={`doge-copy_image-wrapper`} key={`${item}-${i}`}>\n        <Image\n          src={item}\n          layout=\"fill\"\n          objectFit=\"contain\"\n        />\n      </div>\n    ))}\n  </div>\n\nconst VideoWrapper = props => {\n  const opts = {\n    playerVars: {\n      autoplay: 0,\n    },\n  };\n  return (\n    <YouTube className={'video-wrapper'} videoId={props.video} opts={opts} />\n  )\n}\n  \n\nconst DogeCopy = props =>\n  <article className=\"doge-copy_wrapper\">\n    <h1 className=\"title-pill\">{props.title}</h1>\n    {props.copy.map(\n      (item, i) => (\n        <div className={`doge-copy_module ${item.type}`} key={`${item.type}-${i}`}>\n          {\n            item.type === 'copy' ? <div dangerouslySetInnerHTML={{ __html: item.content }} /> :\n              item.type === 'header' ? <h2 dangerouslySetInnerHTML={{ __html: item.content }} /> :\n                item.type === 'images' ? <DogeImages images={item.images} /> :\n                  item.type === 'video' ? <VideoWrapper video={item.content} /> :\n                  false\n          }\n        </div>\n      )\n    )}\n  </article>\n\nexport default DogeCopy"]},"metadata":{},"sourceType":"module"}