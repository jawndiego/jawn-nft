{"ast":null,"code":"import _defineProperty from \"/Users/jawn/Documents/GitHub/jawn-nft/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jawn/Documents/GitHub/jawn-nft/components/models.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { useGLTF } from '@react-three/drei';\nexport function Beer(props) {\n  _s();\n\n  var group = useRef();\n\n  var _useGLTF = useGLTF('./about-pictures/beer.glb'),\n      scene = _useGLTF.scene,\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [0.03, -0.91, 0.03],\n      scale: [0.1, 0.1, 0.1],\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes['14043_16_oz_Beer_Bottle_v2_L1_1'].geometry,\n        material: materials['14043_16_oz__Beer_Bottle_cap_label']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes['14043_16_oz_Beer_Bottle_v2_L1_2'].geometry,\n        material: materials.Material__4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes['14043_16_oz_Beer_Bottle_v2_L1_3'].geometry,\n        material: materials['14043_16_oz__Beer_Bottle_bottle']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Beer, \"sfvsFy1o/B/JWVVPp6Ny2ObmGjs=\", false, function () {\n  return [useGLTF];\n});\n\n_c = Beer;\nexport function Concha(props) {\n  _s2();\n\n  var group = useRef();\n\n  var _useGLTF2 = useGLTF('./about-pictures/oneconcha.glb'),\n      scene = _useGLTF2.scene,\n      nodes = _useGLTF2.nodes,\n      materials = _useGLTF2.materials;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n      object: scene\n    }, props), {}, {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.PAN_CONCHA001.geometry,\n      material: materials['Default OBJ.001'],\n      rotation: [Math.PI / 2, 0, 0],\n      scale: [.35, .35, .35]\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Concha, \"sfvsFy1o/B/JWVVPp6Ny2ObmGjs=\", false, function () {\n  return [useGLTF];\n});\n\n_c2 = Concha;\nexport function Plant(props) {\n  _s3();\n\n  var group = useRef();\n\n  var _useGLTF3 = useGLTF('/about-pictures/plant.gltf'),\n      scene = _useGLTF3.scene,\n      nodes = _useGLTF3.nodes,\n      materials = _useGLTF3.materials;\n\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate fins\n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 1) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 2) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 1)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n      object: scene\n    }, props), {}, {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_1.geometry,\n      material: materials['Standard737373.001'],\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_2.geometry,\n      material: materials.StandardDFD8D4,\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_3.geometry,\n      material: materials.ReflectiveFF3248,\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Plant, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c3 = Plant;\nexport function Angel(props) {\n  _s4();\n\n  var group = useRef();\n\n  var _useGLTF4 = useGLTF('./about-pictures/angel.glb'),\n      scene = _useGLTF4.scene,\n      nodes = _useGLTF4.nodes,\n      materials = _useGLTF4.materials;\n\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate fins\n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 1.5) / 5;\n    group.current.rotation.x = Math.cos(t) / 5;\n    group.current.rotation.y = Math.sin(t / 2) / 10;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 1.5)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [-2.8, 4.87, .49],\n      scale: [.8, .8, .8],\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.angel_1.geometry,\n        material: materials.Standard737373\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.angel_2.geometry,\n        material: materials.Standard00DF00\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.angel_3.geometry,\n        material: materials.StandardFFF0FD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(Angel, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c4 = Angel;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Beer\");\n$RefreshReg$(_c2, \"Concha\");\n$RefreshReg$(_c3, \"Plant\");\n$RefreshReg$(_c4, \"Angel\");","map":{"version":3,"sources":["/Users/jawn/Documents/GitHub/jawn-nft/components/models.js"],"names":["useRef","useFrame","useGLTF","Beer","props","group","scene","nodes","materials","geometry","Material__4","Concha","PAN_CONCHA001","Math","PI","Plant","state","t","clock","getElapsedTime","current","rotation","z","sin","x","cos","y","position","planta_1","planta_2","StandardDFD8D4","planta_3","ReflectiveFF3248","Angel","angel_1","Standard737373","angel_2","Standard00DF00","angel_3","StandardFFF0FD"],"mappings":"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","sourcesContent":["import { useRef } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { useGLTF } from '@react-three/drei'\n\n\nexport function Beer(props) {\n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF('./about-pictures/beer.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[0.03, -0.91, 0.03]} scale={[0.1, 0.1, 0.1]}>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes['14043_16_oz_Beer_Bottle_v2_L1_1'].geometry}\n          material={materials['14043_16_oz__Beer_Bottle_cap_label']}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes['14043_16_oz_Beer_Bottle_v2_L1_2'].geometry}\n          material={materials.Material__4}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes['14043_16_oz_Beer_Bottle_v2_L1_3'].geometry}\n          material={materials['14043_16_oz__Beer_Bottle_bottle']}\n        />\n      </group>\n    </group>\n  )\n}\n\nexport function Concha(props) {\n  const group = useRef()\n  const { scene, nodes, materials } =useGLTF('./about-pictures/oneconcha.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n    <mesh object={scene} {...props}  castShadow\n        receiveShadow\n        geometry={nodes.PAN_CONCHA001.geometry}\n        material={materials['Default OBJ.001']}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[.35, .35, .35]}/>\n\n    </group>\n  )\n}\n\n\nexport function Plant(props) {\n  const group = useRef()\n  const { scene, nodes, materials } =useGLTF('/about-pictures/plant.gltf')\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate fins\n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 1) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 2) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 1)) / 5\n  })\n  \n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh object={scene} {...props} \n        castShadow\n        receiveShadow\n        geometry={nodes.planta_1.geometry}\n        material={materials['Standard737373.001']}\n        position={[0, 3, 3]}\n        scale ={3.5}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.planta_2.geometry}\n          material={materials.StandardDFD8D4}\n          position={[0, 3, 3]}\n          scale ={3.5}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.planta_3.geometry}\n        material={materials.ReflectiveFF3248}\n        position={[0, 3, 3]}\n        scale ={3.5}\n        rotation={[Math.PI / 2, 0, 0]}\n        />\n    \n    </group>\n  )\n}\n\n\nexport function Angel(props) {\n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF('./about-pictures/angel.glb')\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate fins\n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 1.5) / 5\n    group.current.rotation.x = Math.cos(t) / 5\n    group.current.rotation.y = Math.sin(t / 2) / 10\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 1.5)) / 5\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-2.8, 4.87, .49]} scale={[.8, .8, .8]}>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.angel_1.geometry}\n          material={materials.Standard737373}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.angel_2.geometry}\n          material={materials.Standard00DF00}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.angel_3.geometry}\n          material={materials.StandardFFF0FD}\n        />\n        \n      </group>\n    </group>\n  )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}