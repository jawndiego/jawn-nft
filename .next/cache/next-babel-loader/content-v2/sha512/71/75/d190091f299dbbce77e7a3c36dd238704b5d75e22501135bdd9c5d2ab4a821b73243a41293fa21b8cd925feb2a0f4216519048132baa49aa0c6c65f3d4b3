{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jawn/Documents/GitHub/jawn-nft/pages/jawn/[id].js\",\n    _this = this;\n\nimport Head from \"../../components/head\";\nimport GoHome from \"../../components/go-home\";\nimport { NFTFullPage, MediaConfiguration } from \"@zoralabs/nft-components\";\nexport var __N_SSG = true;\nexport var strings = {\n  OPEN_OFFERS: \"\"\n};\n\nvar Doge = function Doge(_ref) {\n  var post = _ref.post,\n      nftData = _ref.nftData;\n  var config = {\n    allowOffer: post.auctionState,\n    showPerpetual: false,\n    refreshInterval: 45\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      title: post.title,\n      description: nftData.description,\n      ogImage: \"\".concat(nftData.zoraNFT.contentURI)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(GoHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"doge-nft_wrapper \".concat(!post.auctionState ? \"hide\" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(MediaConfiguration, {\n        strings: strings,\n        children: /*#__PURE__*/_jsxDEV(NFTFullPage, {\n          id: post.id,\n          config: config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = Doge;\nexport default Doge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doge\");","map":{"version":3,"sources":["/Users/jawn/Documents/GitHub/jawn-nft/pages/jawn/[id].js"],"names":["Head","GoHome","NFTFullPage","MediaConfiguration","strings","OPEN_OFFERS","Doge","post","nftData","config","allowOffer","auctionState","showPerpetual","refreshInterval","title","description","zoraNFT","contentURI","id"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,0BAAhD;;AAOA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,WAAW,EAAE;AADQ,CAAhB;;AAIP,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAuB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAClC,MAAMC,MAAM,GAAG;AACbC,IAAAA,UAAU,EAAEH,IAAI,CAACI,YADJ;AAEbC,IAAAA,aAAa,EAAE,KAFF;AAGbC,IAAAA,eAAe,EAAE;AAHJ,GAAf;AAKA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEN,IAAI,CAACO,KADd;AAEE,MAAA,WAAW,EAAEN,OAAO,CAACO,WAFvB;AAGE,MAAA,OAAO,YAAKP,OAAO,CAACQ,OAAR,CAAgBC,UAArB;AAHT;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aANF,eAOE;AACE,MAAA,SAAS,6BAAsB,CAACV,IAAI,CAACI,YAAN,GAAqB,MAArB,GAA8B,EAApD,CADX;AAAA,6BAGE,QAAC,kBAAD;AAAoB,QAAA,OAAO,EAAEP,OAA7B;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAEG,IAAI,CAACW,EAAtB;AAA0B,UAAA,MAAM,EAAET;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA,kBADF;AAkBD,CAxBD;;KAAMH,I;AAyDN,eAAeA,IAAf","sourcesContent":["import Head from \"../../components/head\";\nimport GoHome from \"../../components/go-home\";\nimport find from \"lodash/find\";\nimport { NFTFullPage, MediaConfiguration } from \"@zoralabs/nft-components\";\nimport { MediaFetchAgent, Networks } from \"@zoralabs/nft-hooks\";\n\n\nimport { NFT_LIST } from \"../../lib/constants\";\n\n\nexport const strings = {\n  OPEN_OFFERS: \"\",\n};\n\nconst Doge = ({ post, nftData }) => {\n  const config = {\n    allowOffer: post.auctionState,\n    showPerpetual: false,\n    refreshInterval: 45,\n  };\n  return (\n    <>\n      <Head\n        title={post.title}\n        description={nftData.description}\n        ogImage={`${nftData.zoraNFT.contentURI}`}\n      />\n      <GoHome />\n      <article\n        className={`doge-nft_wrapper ${!post.auctionState ? \"hide\" : \"\"}`}\n      >\n        <MediaConfiguration strings={strings}>\n          <NFTFullPage id={post.id} config={config} />\n        </MediaConfiguration>\n      </article>\n    \n    </>\n  );\n};\n\nexport async function getStaticPaths() {\n  const paths = NFT_LIST.map((nft) => ({\n    params: { id: nft.slug },\n  }));\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({ params }) {\n  const post = find(NFT_LIST, { slug: params.id });\n  const fetcher = new MediaFetchAgent(Networks.MAINNET);\n\n  const nft = await fetcher.loadZNFTData(post.id);\n  const metadata = await fetcher.fetchIPFSMetadata(nft.nft.metadataURI);\n\n  function prepareJson(json) {\n    return JSON.parse(JSON.stringify(json));\n  }\n\n  const nftData = prepareJson({\n    ...nft,\n    ...metadata,\n  });\n\n  return {\n    props: {\n      post,\n      nftData,\n    },\n  };\n}\n\nexport default Doge;\n"]},"metadata":{},"sourceType":"module"}