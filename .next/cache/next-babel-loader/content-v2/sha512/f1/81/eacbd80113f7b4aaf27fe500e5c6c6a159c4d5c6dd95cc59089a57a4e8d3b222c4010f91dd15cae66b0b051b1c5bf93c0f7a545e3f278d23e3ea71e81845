{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/jawn/Documents/GitHub/jawn-nft/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/jawn/Documents/GitHub/jawn-nft/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jawn/Documents/GitHub/jawn-nft/components/frontart.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as THREE from 'three';\nimport React, { Suspense, useState, useRef } from 'react';\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber';\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei';\nimport { Ramen, Soda, Farm, Heli, Concha } from './models';\n\nfunction FrontModels(props) {\n  _s();\n\n  var group = useRef();\n\n  var _useGLTF = useGLTF('/about-pictures/plant.gltf'),\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_1.geometry,\n      material: materials.Standard737373,\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_2.geometry,\n      material: materials.Standard737373,\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_3.geometry,\n      material: materials.Standard737373,\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FrontModels, \"sGjd4dO4Tp4RBMr9xjC42yCxxlY=\", false, function () {\n  return [useGLTF];\n});\n\n_c = FrontModels;\n\nfunction MagicMirror(_ref) {\n  _s2();\n\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var cam = useRef(); // useFBO creates a WebGL2 buffer for us, it's a helper from the \"drei\" library\n\n  var fbo = useFBO(); // The is a separate scene that we create, React will portal into that\n\n  var _useState = useState(function () {\n    return new THREE.Scene();\n  }),\n      scene = _useState[0]; // Tie this component into the render-loop\n\n\n  useFrame(function (state) {\n    // Our portal has its own camera, but we copy the originals world matrix\n    cam.current.matrixWorldInverse.copy(state.camera.matrixWorldInverse); // Then we set the render-target to the buffer that we have created\n\n    state.gl.setRenderTarget(fbo); // We render the scene into it, using the local camera that is clamped to the planes aspect ratio\n\n    state.gl.render(scene, cam.current); // And flip the render-target to the default again\n\n    state.gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, props), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [4, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        map: fbo.texture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n      manual: true,\n      ref: cam,\n      fov: 50,\n      aspect: 2.5 / 5,\n      onUpdate: function onUpdate(c) {\n        return c.updateProjectionMatrix();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), createPortal(children, scene)]\n  }, void 0, true);\n}\n\n_s2(MagicMirror, \"PFjhhyspXTFL24hLj/IO+64f1g4=\", false, function () {\n  return [useFBO, useFrame];\n});\n\n_c2 = MagicMirror;\n\nfunction Lights() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#f0f0f0']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      intensity: .3,\n      position: [20, 30, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [-10, -10, -10],\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = Lights;\nexport default function App() {\n  _s3();\n\n  var controls = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"front-page_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      dpr: (1, 2),\n      camera: {\n        position: [0, 4, 8],\n        fov: 50\n      },\n      gl: {\n        alpha: false\n      },\n      children: [/*#__PURE__*/_jsxDEV(Lights, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/_jsxDEV(Stage, {\n          controls: controls,\n          children: [/*#__PURE__*/_jsxDEV(MagicMirror, {\n            position: [-13, 3.5, 0],\n            rotation: [0, 0, 0],\n            children: [/*#__PURE__*/_jsxDEV(Lights, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Sky, {\n              sunPosition: [100, 10, 100]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Farm, {\n              scale: 10,\n              rotation: [0, 0, 0],\n              position: [-1, -2, -10]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Heli, {\n              scale: 3,\n              position: [3, 4, -20],\n              rotation: [0.5, 0, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Concha, {\n            position: [-8, 0, 2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Soda, {\n            scale: 5,\n            position: [-10.5, 0, 3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FrontModels, {\n            position: [-12.5, 0, 3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        ref: controls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(App, \"7sXNjZ85F+QCyh0RVZRnHOVcH8w=\");\n\n_c4 = App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FrontModels\");\n$RefreshReg$(_c2, \"MagicMirror\");\n$RefreshReg$(_c3, \"Lights\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/jawn/Documents/GitHub/jawn-nft/components/frontart.js"],"names":["THREE","React","Suspense","useState","useRef","Canvas","useFrame","createPortal","useGLTF","Stage","Sky","Stars","useFBO","OrbitControls","rotation","PerspectiveCamera","CameraShake","ContactShadows","Ramen","Soda","Farm","Heli","Concha","FrontModels","props","group","nodes","materials","planta_1","geometry","Standard737373","Math","PI","planta_2","planta_3","MagicMirror","children","cam","fbo","Scene","scene","state","current","matrixWorldInverse","copy","camera","gl","setRenderTarget","render","texture","c","updateProjectionMatrix","Lights","App","controls","position","fov","alpha"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport React, {  Suspense, useState, useRef } from 'react'\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber'\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'\nimport { Ramen, Soda, Farm, Heli, Concha } from './models'\n\n\n\n\nfunction FrontModels(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/about-pictures/plant.gltf')\n\n  ;\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.planta_1.geometry}\n        material={materials.Standard737373}\n        position={[0, 3, 3]}\n        scale ={3.5}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.planta_2.geometry}\n          material={materials.Standard737373}\n          position={[0, 3, 3]}\n          scale ={3.5}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.planta_3.geometry}\n        material={materials.Standard737373}\n        position={[0, 3, 3]}\n        scale ={3.5}\n        rotation={[Math.PI / 2, 0, 0]}\n        />\n    \n    </group>\n  )\n}\n\n\nfunction MagicMirror({ children, ...props }) {\n  const cam = useRef()\n  // useFBO creates a WebGL2 buffer for us, it's a helper from the \"drei\" library\n  const fbo = useFBO()\n  // The is a separate scene that we create, React will portal into that\n  const [scene] = useState(() => new THREE.Scene())\n  // Tie this component into the render-loop\n  useFrame((state) => {\n    // Our portal has its own camera, but we copy the originals world matrix\n    cam.current.matrixWorldInverse.copy(state.camera.matrixWorldInverse)\n    // Then we set the render-target to the buffer that we have created\n    state.gl.setRenderTarget(fbo)\n    // We render the scene into it, using the local camera that is clamped to the planes aspect ratio\n    state.gl.render(scene, cam.current)\n    // And flip the render-target to the default again\n    state.gl.setRenderTarget(null)\n  })\n  return (\n\n    <>\n\n   \n      <mesh {...props}>\n        <planeGeometry args={[4, 8]} />\n        {/* The \"mirror\" is just a boring plane, but it receives the buffer texture */}\n        <meshBasicMaterial map={fbo.texture} />\n      </mesh>\n    \n      <PerspectiveCamera manual ref={cam} fov={50} aspect={2.5 / 5} onUpdate={(c) => c.updateProjectionMatrix()} />\n      {/* This is React being awesome, we portal this components children into the separate scene above */}\n      {createPortal(children, scene)}\n    </>\n \n  \n  )\n}\n\nfunction Lights() {\n  return (\n    <>\n      <color attach=\"background\" args={['#f0f0f0']} />\n      <ambientLight intensity={1} />\n      <pointLight intensity={.3} position={[20, 30, 10]} />\n      <pointLight position={[-10, -10, -10]} color=\"red\" />\n    </>\n  )\n}\n\nexport default function App() {\n  const controls = useRef()\n  return (\n    <div className=\"front-page_wrapper\">\n    <Canvas dpr={(1,2)} camera={{ position: [0, 4, 8], fov: 50 }} gl={{ alpha: false }}>\n      <Lights />\n      <Suspense fallback={null}>\n        <Stage controls={controls}>\n          <MagicMirror position={[-13, 3.5, 0]} rotation={[0, 0, 0]}>\n            <Lights />\n            <Sky sunPosition={[100, 10, 100]} />\n            <Farm scale={10} rotation={[0, 0, 0]} position={[-1, -2, -10]} />\n            <Heli scale={3} position={[3, 4, -20]} rotation={[0.5, 0, 0]} />\n          </MagicMirror>\n          <Concha position={[-8, 0, 2]} />\n          <Soda scale={5} position={[-10.5, 0, 3]} />\n         \n         \n          \n         \n          <FrontModels position={[-12.5, 0, 3]} />\n          \n         \n        </Stage>\n      </Suspense>\n      <OrbitControls ref={controls} />\n    </Canvas>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}