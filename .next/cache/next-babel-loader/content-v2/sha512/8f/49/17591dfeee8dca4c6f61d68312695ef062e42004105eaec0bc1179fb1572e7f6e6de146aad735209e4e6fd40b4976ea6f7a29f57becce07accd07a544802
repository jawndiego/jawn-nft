{"ast":null,"code":"import _defineProperty from \"/Users/jawn/Documents/GitHub/jawn-nft/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jawn/Documents/GitHub/jawn-nft/components/models.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as THREE from 'three';\nimport React, { Suspense, useState, useRef } from 'react';\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber';\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'; // NEW FORMAT CODE GENERATOR \n//MIRRORCHAR\n\nexport function ObjectListMirror(props) {\n  _s();\n\n  //objectsMirror\n  var objects = [{\n    name: 'angel',\n    pathname: 'angel',\n    material: 'Standardffffff',\n    position: [-1.9, 9, 8],\n    scale: [22, 22, 22],\n    rotation: [-2.9, 5.3, .49]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var name = randomObject.name,\n      pathname = randomObject.pathname,\n      material = randomObject.material,\n      position = randomObject.position,\n      scale = randomObject.scale,\n      rotation = randomObject.rotation;\n  var group = useRef();\n\n  var _useGLTF = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF.scene,\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate \n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[material]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n} //MIDDLECHAr\n\n_s(ObjectListMirror, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c = ObjectListMirror;\nexport function ObjectListMiddle(props) {\n  _s2();\n\n  //objectsMIDDLE \n  var objects = [{\n    name: 'plant',\n    pathname: 'planta',\n    material: 'StandardDFD8D4',\n    position: [-13, 4, 3],\n    scale: [3.3, 3.3, 3.3],\n    rotation: [2, 0, 0]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var name = randomObject.name,\n      pathname = randomObject.pathname,\n      material = randomObject.material,\n      position = randomObject.position,\n      scale = randomObject.scale,\n      rotation = randomObject.rotation;\n  var group = useRef();\n\n  var _useGLTF2 = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF2.scene,\n      nodes = _useGLTF2.nodes,\n      materials = _useGLTF2.materials;\n\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate \n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[material]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n} //RIGHTSIDE\n\n_s2(ObjectListMiddle, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c2 = ObjectListMiddle;\nexport function ObjectListRight(props) {\n  _s3();\n\n  //objectsright \n  var objects = [{\n    name: 'concha',\n    pathname: 'PAN_CONCHA001',\n    material: 'Default OBJ.001',\n    position: [-10.5, .65, 3],\n    scale: [.36, .36, .36],\n    rotation: [2, 0, 0]\n  }, {\n    name: 'beer',\n    pathname: '14043_16_oz_Beer_Bottle_v2_L1',\n    material: 'Material__4',\n    position: [-10.5, 0, 3],\n    scale: [.36, .36, .36],\n    rotation: [.03, .59, 0]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var name = randomObject.name,\n      pathname = randomObject.pathname,\n      material = randomObject.material,\n      position = randomObject.position,\n      scale = randomObject.scale,\n      rotation = randomObject.rotation;\n  var group = useRef();\n\n  var _useGLTF3 = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF3.scene,\n      nodes = _useGLTF3.nodes,\n      materials = _useGLTF3.materials;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[material]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n} //LEFTSIDE\n\n_s3(ObjectListRight, \"sfvsFy1o/B/JWVVPp6Ny2ObmGjs=\", false, function () {\n  return [useGLTF];\n});\n\n_c3 = ObjectListRight;\nexport function ObjectListLeft(props) {\n  _s4();\n\n  //objectsleft objectsright, objectsmiddle objectsmirror \n  var objects = [{\n    name: 'concha',\n    pathname: 'PAN_CONCHA001',\n    material: 'Default OBJ.001',\n    position: [-15, .65, 3],\n    scale: [.36, .36, .36],\n    rotation: [2, 0, 0]\n  }, {\n    name: 'beer',\n    pathname: '14043_16_oz_Beer_Bottle_v2_L1',\n    material: 'Material__4',\n    position: [-15, 0, 3],\n    scale: [.36, .36, .36],\n    rotation: [.03, .59, 0]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var name = randomObject.name,\n      pathname = randomObject.pathname,\n      material = randomObject.material,\n      position = randomObject.position,\n      scale = randomObject.scale,\n      rotation = randomObject.rotation;\n  var group = useRef();\n\n  var _useGLTF4 = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF4.scene,\n      nodes = _useGLTF4.nodes,\n      materials = _useGLTF4.materials;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[material]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 3\n  }, this);\n} // Models \n\n_s4(ObjectListLeft, \"sfvsFy1o/B/JWVVPp6Ny2ObmGjs=\", false, function () {\n  return [useGLTF];\n});\n\n_c4 = ObjectListLeft;\nexport function Beer(props) {\n  _s5();\n\n  var group = useRef();\n\n  var _useGLTF5 = useGLTF('./about-pictures/14043_16_oz_Beer_Bottle_v2_L1.glb'),\n      nodes = _useGLTF5.nodes,\n      materials = _useGLTF5.materials;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes['14043_16_oz_Beer_Bottle_v2_L1'].geometry,\n      material: materials.Material__4,\n      rotation: [.03, -0.91, 0.03],\n      scale: [0.1, 0.1, 0.1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(Beer, \"sGjd4dO4Tp4RBMr9xjC42yCxxlY=\", false, function () {\n  return [useGLTF];\n});\n\n_c5 = Beer;\nexport function Concha(props) {\n  _s6();\n\n  var group = useRef();\n\n  var _useGLTF6 = useGLTF('./about-pictures/PAN_CONCHA001.glb'),\n      scene = _useGLTF6.scene,\n      nodes = _useGLTF6.nodes,\n      materials = _useGLTF6.materials;\n\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n      object: scene\n    }, props), {}, {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.PAN_CONCHA001.geometry,\n      material: materials['Default OBJ.001'],\n      rotation: [Math.PI / 2, 0, 0],\n      scale: [.35, .35, .35]\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n\n_s6(Concha, \"sfvsFy1o/B/JWVVPp6Ny2ObmGjs=\", false, function () {\n  return [useGLTF];\n});\n\n_c6 = Concha;\nexport function Plant(props) {\n  _s7();\n\n  var group = useRef();\n\n  var _useGLTF7 = useGLTF('/about-pictures/plant.gltf'),\n      scene = _useGLTF7.scene,\n      nodes = _useGLTF7.nodes,\n      materials = _useGLTF7.materials;\n\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate \n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n      object: scene\n    }, props), {}, {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_1.geometry,\n      material: materials['Standard737373.001'],\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_2.geometry,\n      material: materials.StandardDFD8D4,\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.planta_3.geometry,\n      material: materials.ReflectiveFF3248,\n      position: [0, 3, 3],\n      scale: 3.5,\n      rotation: [Math.PI / 2, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\n\n_s7(Plant, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c7 = Plant;\nexport function Angel(props) {\n  _s8();\n\n  var group = useRef();\n\n  var _useGLTF8 = useGLTF('./about-pictures/angel.glb'),\n      scene = _useGLTF8.scene,\n      nodes = _useGLTF8.nodes,\n      materials = _useGLTF8.materials;\n\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate \n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [-2.8, 4.87, .49],\n      scale: [.8, .8, .8],\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.angel_1.geometry,\n        material: materials.Standard737373\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.angel_2.geometry,\n        material: materials.Standard00DF00\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.angel_3.geometry,\n        material: materials.StandardFFF0FD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n\n_s8(Angel, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c8 = Angel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"ObjectListMirror\");\n$RefreshReg$(_c2, \"ObjectListMiddle\");\n$RefreshReg$(_c3, \"ObjectListRight\");\n$RefreshReg$(_c4, \"ObjectListLeft\");\n$RefreshReg$(_c5, \"Beer\");\n$RefreshReg$(_c6, \"Concha\");\n$RefreshReg$(_c7, \"Plant\");\n$RefreshReg$(_c8, \"Angel\");","map":{"version":3,"sources":["/Users/jawn/Documents/GitHub/jawn-nft/components/models.js"],"names":["THREE","React","Suspense","useState","useRef","Canvas","useFrame","createPortal","useGLTF","Stage","Sky","Stars","useFBO","OrbitControls","rotation","PerspectiveCamera","CameraShake","ContactShadows","ObjectListMirror","props","objects","name","pathname","material","position","scale","randomIndex","Math","floor","random","length","randomObject","group","scene","nodes","materials","state","t","clock","getElapsedTime","current","z","sin","x","cos","y","geometry","ObjectListMiddle","ObjectListRight","ObjectListLeft","Beer","Material__4","Concha","PAN_CONCHA001","PI","Plant","planta_1","planta_2","StandardDFD8D4","planta_3","ReflectiveFF3248","Angel","angel_1","Standard737373","angel_2","Standard00DF00","angel_3","StandardFFF0FD"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport React, {  Suspense, useState, useRef } from 'react'\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber'\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'\n\n\n\n// NEW FORMAT CODE GENERATOR \n\n//MIRRORCHAR\n\nexport function ObjectListMirror(props) {\n\n  //objectsMirror\n  \n  const objects = [\n    {\n      name: 'angel',\n      pathname: 'angel',\n      material: 'Standardffffff',\n      position: [-1.9, 9, 8],\n      scale: [22, 22, 22],\n      rotation: [-2.9, 5.3, .49]\n    \n      \n    }\n  ]\n  \n  const randomIndex = Math.floor(Math.random() * objects.length);\n  let randomObject = objects[randomIndex];\n  let { name, pathname, material, position, scale, rotation } = randomObject;\n  \n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate \n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  return (\n  \n    <group ref={group} {...props} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={scene} {...props}  \n            castShadow\n            receiveShadow\n            geometry={nodes[pathname].geometry}\n            material={materials[material]} />\n      </group>\n    </group>\n  )\n  }\n\n\n\n\n//MIDDLECHAr\n\nexport function ObjectListMiddle(props) {\n\n  //objectsMIDDLE \n  \n  const objects = [\n    {\n      name: 'plant',\n      pathname: 'planta',\n      material: 'StandardDFD8D4',\n      position: [-13, 4, 3],\n      scale: [3.3, 3.3, 3.3],\n      rotation: [2, 0, 0]\n    \n      \n    }\n  ]\n  \n  const randomIndex = Math.floor(Math.random() * objects.length);\n  let randomObject = objects[randomIndex];\n  let { name, pathname, material, position, scale, rotation } = randomObject;\n  \n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate \n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  return (\n  \n    <group ref={group} {...props} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={scene} {...props}  \n            castShadow\n            receiveShadow\n            geometry={nodes[pathname].geometry}\n            material={materials[material]} />\n      </group>\n    </group>\n  )\n  }\n\n\n\n\n//RIGHTSIDE\n\nexport function ObjectListRight(props) {\n\n  //objectsright \n  \n  const objects = [\n    {\n      name: 'concha',\n      pathname: 'PAN_CONCHA001',\n      material: 'Default OBJ.001',\n      position: [-10.5, .65, 3],\n      scale: [.36, .36, .36],\n      rotation: [2, 0, 0]\n    \n      \n    },\n    {\n      name: 'beer',\n      pathname: '14043_16_oz_Beer_Bottle_v2_L1',\n      material: 'Material__4',\n      position: [-10.5, 0, 3],\n      scale: [.36, .36, .36],\n      rotation: [.03, .59, 0],\n    \n    }\n  ]\n  \n  const randomIndex = Math.floor(Math.random() * objects.length);\n  let randomObject = objects[randomIndex];\n  let { name, pathname, material, position, scale, rotation } = randomObject;\n  \n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`);\n  \n  return (\n  \n    <group ref={group} {...props} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={scene} {...props}  \n            castShadow\n            receiveShadow\n            geometry={nodes[pathname].geometry}\n            material={materials[material]} />\n      </group>\n    </group>\n  )\n  }\n\n//LEFTSIDE\n\nexport function ObjectListLeft(props) {\n\n//objectsleft objectsright, objectsmiddle objectsmirror \n\nconst objects = [\n  {\n    name: 'concha',\n    pathname: 'PAN_CONCHA001',\n    material: 'Default OBJ.001',\n    position: [-15, .65, 3],\n    scale: [.36, .36, .36],\n    rotation: [2, 0, 0]\n  \n    \n  },\n  {\n    name: 'beer',\n    pathname: '14043_16_oz_Beer_Bottle_v2_L1',\n    material: 'Material__4',\n    position: [-15, 0, 3],\n    scale: [.36, .36, .36],\n    rotation: [.03, .59, 0],\n  \n  }\n]\n\nconst randomIndex = Math.floor(Math.random() * objects.length);\nlet randomObject = objects[randomIndex];\nlet { name, pathname, material, position, scale, rotation } = randomObject;\n\nconst group = useRef()\nconst { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`);\n\nreturn (\n\n  <group ref={group} {...props} dispose={null} >\n    <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n      <mesh object={scene} {...props}  \n          castShadow\n          receiveShadow\n          geometry={nodes[pathname].geometry}\n          material={materials[material]} />\n    </group>\n  </group>\n)\n}\n\n// Models \n\nexport function Beer(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('./about-pictures/14043_16_oz_Beer_Bottle_v2_L1.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes['14043_16_oz_Beer_Bottle_v2_L1'].geometry}\n        material={materials.Material__4}\n        rotation={[.03, -0.91, 0.03]}\n        scale={[0.1, 0.1, 0.1]}\n      />\n    </group>\n  )\n}\n\nexport function Concha(props) {\n  const group = useRef()\n  const { scene, nodes, materials } =useGLTF('./about-pictures/PAN_CONCHA001.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n    <mesh object={scene} {...props}  castShadow\n        receiveShadow\n        geometry={nodes.PAN_CONCHA001.geometry}\n        material={materials['Default OBJ.001']}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[.35, .35, .35]}/>\n\n    </group>\n  )\n}\n\n\nexport function Plant(props) {\n  const group = useRef()\n  const { scene, nodes, materials } =useGLTF('/about-pictures/plant.gltf')\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate \n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh object={scene} {...props} \n        castShadow\n        receiveShadow\n        geometry={nodes.planta_1.geometry}\n        material={materials['Standard737373.001']}\n        position={[0, 3, 3]}\n        scale ={3.5}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.planta_2.geometry}\n          material={materials.StandardDFD8D4}\n          position={[0, 3, 3]}\n          scale ={3.5}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.planta_3.geometry}\n        material={materials.ReflectiveFF3248}\n        position={[0, 3, 3]}\n        scale ={3.5}\n        rotation={[Math.PI / 2, 0, 0]}\n        />\n    \n    </group>\n  )\n}\n\n\nexport function Angel(props) {\n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF('./about-pictures/angel.glb')\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate \n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-2.8, 4.87, .49]} scale={[.8, .8, .8]}>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.angel_1.geometry}\n          material={materials.Standard737373}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.angel_2.geometry}\n          material={materials.Standard00DF00}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.angel_3.geometry}\n          material={materials.StandardFFF0FD}\n        />\n        \n      </group>\n    </group>\n  )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}