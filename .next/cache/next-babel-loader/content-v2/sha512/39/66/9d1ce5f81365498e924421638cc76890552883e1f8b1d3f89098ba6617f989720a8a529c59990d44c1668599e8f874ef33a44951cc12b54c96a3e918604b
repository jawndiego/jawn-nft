{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jawn/Documents/GitHub/jawn-nft/components/doge-copy.js\";\nimport Image from 'next/image';\nimport YouTube from 'react-youtube';\n\nconst DogeImages = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `doge-copy_images image-grid-${props.images.length}`,\n  children: props.images.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `doge-copy_image-wrapper`,\n    children: /*#__PURE__*/_jsxDEV(Image, {\n      src: item,\n      layout: \"fill\",\n      objectFit: \"contain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, `${item}-${i}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\nconst VideoWrapper = props => {\n  const opts = {\n    playerVars: {\n      autoplay: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(YouTube, {\n    className: 'video-wrapper',\n    videoId: props.video,\n    opts: opts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\nconst DogeCopy = props => /*#__PURE__*/_jsxDEV(\"article\", {\n  className: \"doge-copy_wrapper\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"title-pill\",\n    children: props.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), props.copy.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `doge-copy_module ${item.type}`,\n    children: item.type === 'copy' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: item.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 36\n    }, this) : item.type === 'header' ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      dangerouslySetInnerHTML: {\n        __html: item.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 40\n    }, this) : item.type === 'images' ? /*#__PURE__*/_jsxDEV(DogeImages, {\n      images: item.images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 42\n    }, this) : item.type === 'video' ? /*#__PURE__*/_jsxDEV(VideoWrapper, {\n      video: item.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 43\n    }, this) : false\n  }, `${item.type}-${i}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\nexport default DogeCopy;","map":{"version":3,"sources":["/Users/jawn/Documents/GitHub/jawn-nft/components/doge-copy.js"],"names":["Image","YouTube","DogeImages","props","images","length","map","item","i","VideoWrapper","opts","playerVars","autoplay","video","DogeCopy","title","copy","type","__html","content"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,iBACtB;AAAK,EAAA,SAAS,EAAG,+BAA8BA,KAAK,CAACC,MAAN,CAAaC,MAAO,EAAnE;AAAA,YACGF,KAAK,CAACC,MAAN,CAAaE,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBAChB;AAAK,IAAA,SAAS,EAAG,yBAAjB;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,IADP;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF,KAAiD,GAAEA,IAAK,IAAGC,CAAE,EAA7D;AAAA;AAAA;AAAA;AAAA,UADD;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;AAaA,MAAMC,YAAY,GAAGN,KAAK,IAAI;AAC5B,QAAMO,IAAI,GAAG;AACXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AADD,GAAb;AAKA,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAE,eAApB;AAAqC,IAAA,OAAO,EAAET,KAAK,CAACU,KAApD;AAA2D,IAAA,IAAI,EAAEH;AAAjE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CATD;;AAYA,MAAMI,QAAQ,GAAGX,KAAK,iBACpB;AAAS,EAAA,SAAS,EAAC,mBAAnB;AAAA,0BACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cAA4BA,KAAK,CAACY;AAAlC;AAAA;AAAA;AAAA;AAAA,UADF,EAEGZ,KAAK,CAACa,IAAN,CAAWV,GAAX,CACC,CAACC,IAAD,EAAOC,CAAP,kBACE;AAAK,IAAA,SAAS,EAAG,oBAAmBD,IAAI,CAACU,IAAK,EAA9C;AAAA,cAEIV,IAAI,CAACU,IAAL,KAAc,MAAd,gBAAuB;AAAK,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEX,IAAI,CAACY;AAAf;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAvB,GACEZ,IAAI,CAACU,IAAL,KAAc,QAAd,gBAAyB;AAAI,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEX,IAAI,CAACY;AAAf;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAzB,GACEZ,IAAI,CAACU,IAAL,KAAc,QAAd,gBAAyB,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEV,IAAI,CAACH;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAzB,GACEG,IAAI,CAACU,IAAL,KAAc,OAAd,gBAAwB,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEV,IAAI,CAACY;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAxB,GACA;AANV,KAAuD,GAAEZ,IAAI,CAACU,IAAK,IAAGT,CAAE,EAAxE;AAAA;AAAA;AAAA;AAAA,UAFH,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAkBA,eAAeM,QAAf","sourcesContent":["import Image from 'next/image'\nimport YouTube from 'react-youtube';\n\nconst DogeImages = props =>\n  <div className={`doge-copy_images image-grid-${props.images.length}`}>\n    {props.images.map((item, i) => (\n      <div className={`doge-copy_image-wrapper`} key={`${item}-${i}`}>\n        <Image\n          src={item}\n          layout=\"fill\"\n          objectFit=\"contain\"\n        />\n      </div>\n    ))}\n  </div>\n\nconst VideoWrapper = props => {\n  const opts = {\n    playerVars: {\n      autoplay: 0,\n    },\n  };\n  return (\n    <YouTube className={'video-wrapper'} videoId={props.video} opts={opts} />\n  )\n}\n  \n\nconst DogeCopy = props =>\n  <article className=\"doge-copy_wrapper\">\n    <h1 className=\"title-pill\">{props.title}</h1>\n    {props.copy.map(\n      (item, i) => (\n        <div className={`doge-copy_module ${item.type}`} key={`${item.type}-${i}`}>\n          {\n            item.type === 'copy' ? <div dangerouslySetInnerHTML={{ __html: item.content }} /> :\n              item.type === 'header' ? <h2 dangerouslySetInnerHTML={{ __html: item.content }} /> :\n                item.type === 'images' ? <DogeImages images={item.images} /> :\n                  item.type === 'video' ? <VideoWrapper video={item.content} /> :\n                  false\n          }\n        </div>\n      )\n    )}\n  </article>\n\nexport default DogeCopy"]},"metadata":{},"sourceType":"module"}