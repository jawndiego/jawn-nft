"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PricingComponent = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const useMediaContext_1 = require("../context/useMediaContext");
const NFTDataContext_1 = require("../context/NFTDataContext");
const CountdownDisplay_1 = require("../components/CountdownDisplay");
const nft_hooks_1 = require("@zoralabs/nft-hooks");
function isInFuture(timestamp) {
    const timestampParsed = parseInt(timestamp);
    return timestampParsed > Math.floor(new Date().getTime() / 1000);
}
const PricingComponent = () => {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const { nft: { data }, } = react_1.useContext(NFTDataContext_1.NFTDataContext);
    const { getStyles, getString } = useMediaContext_1.useMediaContext();
    const pricing = data === null || data === void 0 ? void 0 : data.pricing;
    if (pricing && pricing.status === nft_hooks_1.AuctionStateInfo.NO_PRICING) {
        return (jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("cardAuctionPricing", { type: "unknown" }), { children: [jsx_runtime_1.jsx("div", Object.assign({}, getStyles("textSubdued"), { children: getString("RESERVE_PRICE") }), void 0),
                jsx_runtime_1.jsx("div", Object.assign({}, getStyles("pricingAmount"), { children: getString("NO_PRICING_PLACEHOLDER") }), void 0),
                jsx_runtime_1.jsx("div", Object.assign({}, getStyles("textSubdued"), { children: getString("HIGHEST_BID") }), void 0),
                jsx_runtime_1.jsx("div", Object.assign({}, getStyles("pricingAmount"), { children: getString("NO_PRICING_PLACEHOLDER") }), void 0)] }), void 0));
    }
    if (pricing && pricing.auctionType === nft_hooks_1.AuctionType.PERPETUAL) {
        let listPrice = null;
        if ((_a = pricing.perpetual.ask) === null || _a === void 0 ? void 0 : _a.pricing) {
            const perpetualPricing = (_b = pricing.perpetual.ask) === null || _b === void 0 ? void 0 : _b.pricing;
            listPrice = (jsx_runtime_1.jsxs(react_1.Fragment, { children: [jsx_runtime_1.jsx("span", Object.assign({}, getStyles("textSubdued"), { children: getString("LIST_PRICE") }), void 0),
                    jsx_runtime_1.jsxs("span", { children: [perpetualPricing.prettyAmount, " ", perpetualPricing.currency.symbol] }, void 0)] }, void 0));
        }
        const highestBid = pricing.perpetual.highestBid;
        if (!highestBid && ((_c = pricing.reserve) === null || _c === void 0 ? void 0 : _c.previousBids.length)) {
            const highestPreviousBid = pricing.reserve.previousBids[0];
            return (jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("cardAuctionPricing", { type: "reserve-pending" }), { children: [jsx_runtime_1.jsx("span", Object.assign({}, getStyles("textSubdued"), { children: getString("SOLD_FOR") }), void 0),
                    jsx_runtime_1.jsxs("span", Object.assign({}, getStyles("pricingAmount"), { children: [highestPreviousBid === null || highestPreviousBid === void 0 ? void 0 : highestPreviousBid.pricing.prettyAmount, " ", highestPreviousBid === null || highestPreviousBid === void 0 ? void 0 : highestPreviousBid.pricing.currency.symbol] }), void 0), listPrice] }), void 0));
        }
        return (jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("cardAuctionPricing", { type: "perpetual" }), { children: [jsx_runtime_1.jsx("span", Object.assign({}, getStyles("textSubdued"), { children: getString("HIGHEST_BID") }), void 0),
                jsx_runtime_1.jsxs("span", Object.assign({}, getStyles("pricingAmount"), { children: [!highestBid && getString("NO_PRICING_PLACEHOLDER"), highestBid === null || highestBid === void 0 ? void 0 : highestBid.pricing.prettyAmount, " ", highestBid === null || highestBid === void 0 ? void 0 : highestBid.pricing.currency.symbol] }), void 0), listPrice] }), void 0));
    }
    if (pricing && pricing.auctionType === nft_hooks_1.AuctionType.RESERVE) {
        if (((_d = pricing.reserve) === null || _d === void 0 ? void 0 : _d.current.reserveMet) &&
            !((_e = pricing.reserve) === null || _e === void 0 ? void 0 : _e.current.likelyHasEnded)) {
            const highestBid = (_f = pricing.reserve) === null || _f === void 0 ? void 0 : _f.current.highestBid;
            return (jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("cardAuctionPricing", { type: "reserve-active" }), { children: [jsx_runtime_1.jsx("span", Object.assign({}, getStyles("textSubdued"), { children: getString("TOP_BID") }), void 0),
                    jsx_runtime_1.jsxs("span", Object.assign({}, getStyles("pricingAmount"), { children: [highestBid === null || highestBid === void 0 ? void 0 : highestBid.pricing.prettyAmount, " ", highestBid === null || highestBid === void 0 ? void 0 : highestBid.pricing.currency.symbol] }), void 0),
                    ((_g = pricing.reserve) === null || _g === void 0 ? void 0 : _g.expectedEndTimestamp) &&
                        isInFuture(pricing.reserve.expectedEndTimestamp) && (jsx_runtime_1.jsxs(react_1.Fragment, { children: [jsx_runtime_1.jsx("span", Object.assign({}, getStyles("textSubdued"), { children: getString("ENDS_IN") }), void 0),
                            jsx_runtime_1.jsx("span", Object.assign({}, getStyles("pricingAmount"), { children: jsx_runtime_1.jsx(CountdownDisplay_1.CountdownDisplay, { to: pricing.reserve.expectedEndTimestamp }, void 0) }), void 0)] }, void 0))] }), void 0));
        }
        if ((_h = pricing.reserve) === null || _h === void 0 ? void 0 : _h.reservePrice) {
            return (jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("cardAuctionPricing", { type: "reserve-pending" }), { children: [jsx_runtime_1.jsx("span", Object.assign({}, getStyles("textSubdued"), { children: getString("RESERVE_PRICE") }), void 0),
                    jsx_runtime_1.jsxs("span", { children: [pricing.reserve.reservePrice.prettyAmount, " ", pricing.reserve.reservePrice.currency.symbol] }, void 0)] }), void 0));
        }
    }
    return (jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("cardAuctionPricing", { type: "unknown" }), { children: [jsx_runtime_1.jsx("div", Object.assign({}, getStyles("textSubdued"), { children: getString("PRICING_LOADING") }), void 0),
            jsx_runtime_1.jsx("div", Object.assign({}, getStyles("pricingAmount"), { children: getString("PRICING_LOADING") }), void 0)] }), void 0));
};
exports.PricingComponent = PricingComponent;
