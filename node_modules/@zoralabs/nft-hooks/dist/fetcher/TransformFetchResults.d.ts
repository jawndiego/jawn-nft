import type { CurrencyShortFragment, GetMediaAndAuctionsQuery } from '../graph-queries/zora-types';
import type { GetTokenPricesQuery } from '../graph-queries/uniswap-types';
import { ChainCurrencyType } from './FetchResultTypes';
import { CurrencyLookupType, ZNFTMediaDataType, PricingInfoData } from './AuctionInfoTypes';
import { NetworkIDs } from '../constants/networks';
export declare function transformCurrencyEth(currency: CurrencyShortFragment): {
    __typename?: "Currency" | undefined;
    symbol: string;
    id: string;
    name: string;
    decimals?: import("../graph-queries/zora-types").Maybe<number> | undefined;
};
export declare function transformMediaForKey(result: GetMediaAndAuctionsQuery, key: string, networkId: NetworkIDs): ZNFTMediaDataType;
export declare function transformCurrencyForKey(result: GetTokenPricesQuery, key: string): ChainCurrencyType;
export declare function addAuctionInformation(chainNFT: ZNFTMediaDataType, currencyInfos?: CurrencyLookupType): {
    pricing: PricingInfoData;
    nft: import("./FetchResultTypes").NFTResultType;
    zoraNFT: Omit<import("../graph-queries/zora-types").NftMediaFragment, "id" | "currentBids" | "owner" | "metadataURI" | "creator" | "currentAsk"> & {
        creatorBidSharePercentage: number;
    };
};
